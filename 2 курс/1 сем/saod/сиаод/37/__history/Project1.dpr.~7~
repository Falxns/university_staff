program Project1;

{$APPTYPE CONSOLE}

uses
    SysUtils;

type
    ttree = ^ptree;
    ptree = record
        data : LongInt;
        counter : Longint;
        left : ttree;
        right : ttree;
end;
    Adr =^Zveno;
    Zveno = record
        Elem: Integer;
        Adrcled: Adr;
end;

var
    n, x, i : LongInt;
    tree : ttree;
    adr1, adrcv: Adr;

procedure Dobav(Zv: Adr; El: Integer);
var
    Buff: Adr;
begin
    New(Buff);
    Buff^.Elem := El;
    Zv^.Adrcled := Buff;
    Buff^.Adrcled := nil;
end;

procedure Add(var node : ttree; data : LongInt);
begin
    if (node = nil) then
    begin
        New(node);
        node^.data := data;
        node^.counter := 1;
        node^.left := nil;
        node^.right := nil;
    end
    else
    begin
        if (data = node^.data) then
            inc(node^.counter)
        else
            if (data < node^.data) then
                Add(node^.left, data)
            else
                Add(node^.right, data);
    end;
end;

procedure printElement(data, count : LongInt);
var
    i : LongInt;
begin
    writeln;
    for i := 1 to count do
        write(data, ' ');
    writeln;
end;

procedure TreeWalk(currentNode : ttree);
begin
    if (currentNode = nil) then
        exit;
    if (currentNode^.counter <> 1) then
        printElement(currentNode^.data, currentNode^.counter);
    TreeWalk(currentNode^.left);
    TreeWalk(currentNode^.right);
end;

begin
    writeln ('vvedite kolichestvo elementov masiva:');
    readln(n);
    writeln ('vvedite sami elementy');
    for i := 1 to n do begin
        read(x);
        Add(tree, x);
    end;

    TreeWalk(tree);
    readln;
    readln;
end.

