unit Main;

interface

uses
    Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
    Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls;

type
    TMainF = class(TForm)
        Inp: TEdit;
    OutLbl: TLabel;
        Calc: TButton;
    RankLbl: TLabel;
    procedure CalcClick(Sender: TObject);
    private
        { Private declarations }
    public
        { Public declarations }
end;

const
    Operand: set of Char = ['A'..'Z', 'a'..'z'];
    Operation: set of Char = ['+', '-', '*', '/', '^'];

type
    TStack = ^Stack;

    Stack = record
        data: Char;
        next: TStack;
end;

var
  MainF: TMainF;

implementation

{$R *.dfm}

function FindRank(Str: String):String;
var
    i, Counter: Integer;
begin
    Counter := 0;
    for i := 1 to Length(Str) do
    begin
        if Str[i] in operand then
            inc(Counter);
        if Str[i] in operation then
            dec(Counter);
    end;
    Result := IntToStr(Counter);
end;

procedure TMainF.CalcClick(Sender: TObject);
var
    Input, Output: String;
begin
    Input := Inp.Text;
    RankLbl.Caption := 'Rank: ' + FindRank(Input);
end;

end.
