unit Unit1;

interface

uses
    System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,
    FMX.Types, FMX.Controls, FMX.Forms, FMX.Graphics, FMX.Dialogs, FMX.Objects,
    FMX.Controls.Presentation, FMX.StdCtrls;

type
    TMainF = class(TForm)
        Time: TTimer;
        Start: TButton;
        PB: TPaintBox;
    procedure StartClick(Sender: TObject);
    procedure TimeTimer(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
    MainF: TMainF;
    i, j, k, l, s, z: Integer;
    A_x, A_y, A_nx, A_ny, A_kol: Integer;
    B_x, B_y, B_nx, B_ny, B_kol: Integer;
    R_x, R_y: Integer;
    Str: String;
    mov1, mov2: Array[1..8] of Integer;
    mov3: Array[0..1000, 0..1000] of Integer;

implementation

{$R *.fmx}

procedure TMainF.StartClick(Sender: TObject);
begin
//---------------Отрисовка доски-----------------
    for i := 1 to 4 do
    begin
        for j := 1 to 4 do
        begin
            PB.Canvas.Brush.Color := clBlack;
            PB.Canvas.Rectangle(0+l, 0+k, 80+l, 80+k);
            inc(l, 80);
            PB.Canvas.Brush.Color := clWhite;
            PB.Canvas.Rectangle(0+l, 0+k, 80+l, 80+k);
            inc(l, 80);
        end;
        l := 0;
        inc(k, 80);
        for j := 1 to 4 do
        begin
            PB.Canvas.Brush.Color:=clWhite;
            PB.Canvas.Rectangle(0+l, 0+k, 80+l, 80+k);
            inc(l, 80);
            PB.Canvas.Brush.Color:=clBlack;
            PB.Canvas.Rectangle(0+l, 0+k, 80+l, 80+k);
            inc(l, 80);
        end;
        l := 0;
        inc(k, 80);
    end;
  mov1[1] := 2; mov1[2] := 1; mov1[3] := 2; mov1[4] := -2; mov1[5] := -1; mov1[6] := -1; mov1[7] := 1; mov1[8] := -2;
  mov2[1] := -1; mov2[2] := -2; mov2[3] := 1; mov2[4] := 1; mov2[5] := -2; mov2[6] := 2; mov2[7] := 2; mov2[8] := -1;
//---------------------------------------------------------------------------
    l := 0; k := 1; i := 0; j := 1; //переобозначение после отрисовки доски (чтобы не вводить новые переменные)

    A_kol := 8; B_kol := 8;//количество возможных ходов в начале обозначается максимальным числом ходов коня из клетки то есть 8

    A_x := 40; A_y := 40; // координаты начальной клетки

    mov3[A_x][A_y] := 1; //заносим начальное положение коня кок посещенное

//--------------------------Обозначение положения коня на доске и пройденные им клетки--------------------------------------------------
    PB.Canvas.Brush.Color := clRed;
    PB.Canvas.Ellipse(A_x-4, A_y-4, A_x+4, A_y+4);
    str := IntToStr(k);
    PB.Canvas.TextOut(A_x+6, A_y+6, str);
    PB.Canvas.Brush.Color := clWhite;

//----------------------------------------------------------------------------
    Time.Enabled := True
end;

procedure TMainF.TimeTimer(Sender: TObject);
begin
    inc(k);
    for i := 1 to 63 do //цикл определяющий общее количество необходимых ходов для обхода доски 8*8=64 всего 64 но -1(начальное положение) всего 63
    begin
        for s := 1 to 8 do //цикл проверяющий на возможный ход коня  из А
        begin
            if (A_x+mov1[s]*80 >= 40)and(A_y+mov2[s]*80 >= 40)and(A_x+mov1[s]*80 <= 600)and(A_y+mov2[s]*80 <= 600)and(mov3[A_x+mov1[s]*80][A_y+mov2[s]*80] = 0) then //число не должно выходить за рамки доски и присутствовать в массиве посещенных ходов.
            begin
                A_kol := 0;
                A_nx := A_x + mov1[s]*80;
                A_ny := A_y + mov2[s]*80;
                for z := 1 to 8 do //цикл подсчитывающий количество возможных ходов из предполагаемого хода
                begin
                    if (A_nx+mov1[z]*80 >= 40)and(A_ny+mov2[z]*80 >= 40)and(A_nx+mov1[z]*80 <= 600)and(A_ny+mov2[z]*80 <= 600)and(mov3[A_nx+mov1[z]*80][A_ny+mov2[z]*80] = 0) then
                        A_kol := A_kol+1;
                end;
            end;
            if B_kol > A_kol then
            begin
                B_x := A_nx;
                B_y := A_ny;
                B_kol := A_kol;
            end;
        end;
        {
        PaintBox1.Canvas.pen.Color:=clred;
        PaintBox1.Canvas.Pen.Width:=5;
        PaintBox1.Canvas.MoveTo(A_x,A_y);
        PaintBox1.Canvas.LineTo(B_x,B_y);
        PaintBox1.Canvas.Brush.Color:=clwhite;
        }
        A_x := B_x;
        A_y := B_y;
        A_nx := 0;
        A_ny := 0;
        A_kol := 8;
        B_kol := 8;
        mov3[A_x][A_y] := 1;
//--------------------------Обозначение положения коня на доске и пройденные им клетки--------------------------------------------------
        PB.Canvas.Brush.Color := clRed;
        PB.Canvas.Ellipse(A_x-4, A_y-4, A_x+4, A_y+4);
        str := IntToStr(k);
        PB.Canvas.TextOut(A_x+6, A_y+6, str);
        PB.Canvas.Brush.Color := clWhite;
    end;
    inc(j);
    if j = 64 then
        Time.Enabled := False;
end;

end.
