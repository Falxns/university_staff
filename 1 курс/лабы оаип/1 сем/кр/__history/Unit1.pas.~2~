unit Unit1;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.Menus, Vcl.StdCtrls, Vcl.Grids;

type
  TMain = class(TForm)
    SG: TStringGrid;
    SGR: TStringGrid;
    SortBtn: TButton;
    RowsAm: TEdit;
    ColumnsAm: TEdit;
    Text1: TLabel;
    Text2: TLabel;
    CheckBtn: TButton;
    Popup: TPopupMenu;
    procedure RowsAmKeyPress(Sender: TObject; var Key: Char);
    procedure CheckBtnClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Main: TMain;

implementation

{$R *.dfm}

procedure TMain.CheckBtnClick(Sender: TObject);
begin
    if (Length(RowsAm.Text) > 0)and(Length(ColumnsAm.Text) > 0) then
    begin
        SG.Enabled := true;
        SG.RowCount := StrToInt(RowsAm.Text);
        SG.ColCount := StrToInt(ColumnsAm.Text);
        SGR.RowCount := StrToInt(RowsAm.Text);
        SGR.ColCount := StrToInt(ColumnsAm.Text);
        SortBtn.Enabled := true;
    end
    else
        begin
            ShowMessage('Error. Enter numbers [2..5] in blank fields.');
            //RowsAm.Clear;
            //ColumnsAm.Clear;
        end;

end;

procedure TMain.RowsAmKeyPress(Sender: TObject; var Key: Char);
var
    Numerals: set of char;
begin
    Numerals := ['2'..'5', #8];
    CheckBtn.Enabled := true;
    SortBtn.Enabled := false;
    with Sender as TEdit do
    begin
        if not (Key in Numerals) then
            Key := #0;
        if (Length(Text) = 1) and (Key <> #8) then
            Key := #0;
    end;
end;

end.
