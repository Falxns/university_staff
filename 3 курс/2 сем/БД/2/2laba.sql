/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 15.0 		*/
/*  Created On : 05-март-2021 16:13:59 				*/
/*  DBMS       : SQL Server 2012 						*/
/* ---------------------------------------------------- */

/* Drop Foreign Key Constraints */

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_account_owner]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [account] DROP CONSTRAINT [FK_account_owner]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_juridical_person_owner]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [juridical_person] DROP CONSTRAINT [FK_juridical_person_owner]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_payment_archive_account_from]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [payment_archive] DROP CONSTRAINT [FK_payment_archive_account_from]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_payment_archive_account_to]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [payment_archive] DROP CONSTRAINT [FK_payment_archive_account_to]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_payment_operational_account_from]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [payment_operational] DROP CONSTRAINT [FK_payment_operational_account_from]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_payment_operational_account_to]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [payment_operational] DROP CONSTRAINT [FK_payment_operational_account_to]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_physical_person_owner]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [physical_person] DROP CONSTRAINT [FK_physical_person_owner]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_site_page_site_page]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [site_page] DROP CONSTRAINT [FK_site_page_site_page]
GO

/* Drop Tables */

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[account]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [account]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[juridical_person]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [juridical_person]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[office]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [office]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[owner]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [owner]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[payment_archive]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [payment_archive]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[payment_operational]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [payment_operational]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[physical_person]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [physical_person]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[site_page]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [site_page]
GO

/* Create Tables */

CREATE TABLE [account]
(
	[a_IBAN] varchar(34) NOT NULL,
	[a_owner] bigint NOT NULL,
	[a_is_system] bit NOT NULL,
	[a_balance] money NOT NULL,
	[a_status] enumstatus NOT NULL,
	[a_type] enumcurrency NOT NULL
)
GO

CREATE TABLE [juridical_person]
(
	[jp_name] varchar(200) NOT NULL,
	[jp_owner_id] bigint NOT NULL,
	[jp_phone_number] varchar(20) NOT NULL,
	[jp_address] varchar(200) NOT NULL
)
GO

CREATE TABLE [office]
(
	[of_name] nvarchar(200) NOT NULL,
	[of_address] nvarchar(200) NOT NULL,
	[of_sales] bigint NOT NULL,
	[of_city] nvarchar(200) NOT NULL,
	[of_id] bigint NOT NULL IDENTITY (1, 1)
)
GO

CREATE TABLE [owner]
(
	[o_id] bigint NOT NULL IDENTITY (1, 1) NOT FOR REPLICATION,
	[o_name] nvarchar(200) NOT NULL,
	[o_office] bigint NOT NULL,
	[o_type] varchar(50) NULL
)
GO

CREATE TABLE [payment_archive]
(
	[pa_id] bigint NOT NULL,
	[pa_from] varchar(34) NOT NULL,
	[pa_to] varchar(34) NOT NULL,
	[pa_amount] money NOT NULL,
	[pa_date_time] datetime NOT NULL
)
GO

CREATE TABLE [payment_operational]
(
	[po_id] bigint NOT NULL IDENTITY (1, 1),
	[po_from] varchar(34) NOT NULL,
	[po_to] varchar(34) NOT NULL,
	[po_amount] money NOT NULL,
	[po_date_time] datetime NOT NULL
)
GO

CREATE TABLE [physical_person]
(
	[pp_first_name] varchar(200) NOT NULL,
	[pp_middle_name] varchar(200) NOT NULL,
	[pp_last_name] varchar(200) NOT NULL,
	[pp_passport_number] varchar(9) NOT NULL,
	[pp_owner_id] bigint NOT NULL,
	[pp_phone_number] varchar(20) NOT NULL,
	[pp_address] varchar(200) NOT NULL
)
GO

CREATE TABLE [site_page]
(
	[sp_id] int NOT NULL IDENTITY (1, 1),
	[sp_parent] int NULL,
	[sp_name] nvarchar(100) NOT NULL,
	[sp_content] xml NOT NULL
)
GO

/* Create Primary Keys, Indexes, Uniques, Checks */

ALTER TABLE [account] 
 ADD CONSTRAINT [PK_account]
	PRIMARY KEY CLUSTERED ([a_IBAN] ASC)
GO

ALTER TABLE [account] 
 ADD CONSTRAINT [UNQ_status] UNIQUE NONCLUSTERED ([a_status] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_account_owner] 
 ON [account] ([a_owner] ASC)
GO

ALTER TABLE [juridical_person] 
 ADD CONSTRAINT [PK_juridical_person]
	PRIMARY KEY CLUSTERED ([jp_owner_id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_juridical_person_owner] 
 ON [juridical_person] ([jp_owner_id] ASC)
GO

CREATE NONCLUSTERED INDEX [UNQ_juridical_person_name] 
 ON [juridical_person] ([jp_name] ASC)
GO

ALTER TABLE [office] 
 ADD CONSTRAINT [PK_office]
	PRIMARY KEY CLUSTERED ([of_id] ASC)
GO

ALTER TABLE [office] 
 ADD CONSTRAINT [UNQ_name] UNIQUE NONCLUSTERED ([of_name] ASC)
GO

ALTER TABLE [owner] 
 ADD CONSTRAINT [PK_owner]
	PRIMARY KEY CLUSTERED ([o_id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_owner_office] 
 ON [owner] ([o_office] ASC)
GO

CREATE NONCLUSTERED INDEX [IDX_owner_name] 
 ON [owner] ([o_name] ASC)
GO

ALTER TABLE [payment_archive] 
 ADD CONSTRAINT [PK_payment_archive]
	PRIMARY KEY CLUSTERED ([pa_id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_payment_archive_account_to] 
 ON [payment_archive] ([pa_to] ASC)
GO

CREATE NONCLUSTERED INDEX [IDX_payment_archive_date_time] 
 ON [payment_archive] ([pa_date_time] ASC)
GO

ALTER TABLE [payment_operational] 
 ADD CONSTRAINT [PK_payment_operational]
	PRIMARY KEY CLUSTERED ([po_id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_payment_operational_account_to] 
 ON [payment_operational] ([po_to] ASC)
GO

CREATE NONCLUSTERED INDEX [IDX_payment_operational_date_time] 
 ON [payment_operational] ([po_date_time] ASC)
GO

ALTER TABLE [physical_person] 
 ADD CONSTRAINT [PK_physical_person]
	PRIMARY KEY CLUSTERED ([pp_owner_id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_physical_person_owner] 
 ON [physical_person] ([pp_owner_id] ASC)
GO

CREATE NONCLUSTERED INDEX [IDX_physical_person_last_name] 
 ON [physical_person] ([pp_last_name] ASC)
GO

ALTER TABLE [site_page] 
 ADD CONSTRAINT [PK_site_page]
	PRIMARY KEY CLUSTERED ([sp_id] ASC)
GO

ALTER TABLE [site_page] 
 ADD CONSTRAINT [UNQ_site_page_name] UNIQUE NONCLUSTERED ([sp_name] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_site_page_site_page] 
 ON [site_page] ([sp_parent] ASC)
GO

/* Create Foreign Key Constraints */

ALTER TABLE [account] ADD CONSTRAINT [FK_account_owner]
	FOREIGN KEY ([a_owner]) REFERENCES [owner] ([o_id]) ON DELETE No Action ON UPDATE Cascade
GO

ALTER TABLE [juridical_person] ADD CONSTRAINT [FK_juridical_person_owner]
	FOREIGN KEY ([jp_owner_id]) REFERENCES [owner] ([o_id]) ON DELETE No Action ON UPDATE Cascade
GO

ALTER TABLE [payment_archive] ADD CONSTRAINT [FK_payment_archive_account_from]
	FOREIGN KEY ([pa_from]) REFERENCES [account] ([a_IBAN]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [payment_archive] ADD CONSTRAINT [FK_payment_archive_account_to]
	FOREIGN KEY ([pa_to]) REFERENCES [account] ([a_IBAN]) ON DELETE No Action ON UPDATE Cascade
GO

ALTER TABLE [payment_operational] ADD CONSTRAINT [FK_payment_operational_account_from]
	FOREIGN KEY ([po_from]) REFERENCES [account] ([a_IBAN]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [payment_operational] ADD CONSTRAINT [FK_payment_operational_account_to]
	FOREIGN KEY ([po_to]) REFERENCES [account] ([a_IBAN]) ON DELETE No Action ON UPDATE Cascade
GO

ALTER TABLE [physical_person] ADD CONSTRAINT [FK_physical_person_owner]
	FOREIGN KEY ([pp_owner_id]) REFERENCES [owner] ([o_id]) ON DELETE No Action ON UPDATE Cascade
GO

ALTER TABLE [site_page] ADD CONSTRAINT [FK_site_page_site_page]
	FOREIGN KEY ([sp_parent]) REFERENCES [site_page] ([sp_id]) ON DELETE Set Null ON UPDATE Cascade
GO

/* Create Table Comments */

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'table', 'account', NULL, NULL)) 
begin 
  EXEC sys.sp_updateextendedproperty 'MS_Description', 'Содержит информацию о счете в банке', 'SCHEMA', 'dbo', 'table', 'account' 
end 
else 
begin 
  EXEC sys.sp_addextendedproperty 'MS_Description', 'Содержит информацию о счете в банке', 'SCHEMA', 'dbo', 'table', 'account' 
end
GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'table', 'juridical_person', NULL, NULL)) 
begin 
  EXEC sys.sp_updateextendedproperty 'MS_Description', 'Подробная информация о конкретном юридическом лице в виде названия предприятия, контактного телефона, адреса главного офиса', 'SCHEMA', 'dbo', 'table', 'juridical_person' 
end 
else 
begin 
  EXEC sys.sp_addextendedproperty 'MS_Description', 'Подробная информация о конкретном юридическом лице в виде названия предприятия, контактного телефона, адреса главного офиса', 'SCHEMA', 'dbo', 'table', 'juridical_person' 
end
GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'table', 'office', NULL, NULL)) 
begin 
  EXEC sys.sp_updateextendedproperty 'MS_Description', 'Информация об офисах банка с их адресами, размерами продаж, городами расположения и названиями отделений.', 'SCHEMA', 'dbo', 'table', 'office' 
end 
else 
begin 
  EXEC sys.sp_addextendedproperty 'MS_Description', 'Информация об офисах банка с их адресами, размерами продаж, городами расположения и названиями отделений.', 'SCHEMA', 'dbo', 'table', 'office' 
end
GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'table', 'owner', NULL, NULL)) 
begin 
  EXEC sys.sp_updateextendedproperty 'MS_Description', 'Описание владельца счета, включающее в себя офис, где был открыт счет, тип лица (физическое или юридическое), имя', 'SCHEMA', 'dbo', 'table', 'owner' 
end 
else 
begin 
  EXEC sys.sp_addextendedproperty 'MS_Description', 'Описание владельца счета, включающее в себя офис, где был открыт счет, тип лица (физическое или юридическое), имя', 'SCHEMA', 'dbo', 'table', 'owner' 
end
GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'table', 'payment_archive', NULL, NULL)) 
begin 
  EXEC sys.sp_updateextendedproperty 'MS_Description', 'Транзакции, произошедшие более 1 месяца назад. Редко используются, но должны сохраняться', 'SCHEMA', 'dbo', 'table', 'payment_archive' 
end 
else 
begin 
  EXEC sys.sp_addextendedproperty 'MS_Description', 'Транзакции, произошедшие более 1 месяца назад. Редко используются, но должны сохраняться', 'SCHEMA', 'dbo', 'table', 'payment_archive' 
end
GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'table', 'payment_operational', NULL, NULL)) 
begin 
  EXEC sys.sp_updateextendedproperty 'MS_Description', 'Информация о платежах, проведённых в течение 1 месяца с последнего. Необходима для быстрого и частого доступа к последним транзакциям', 'SCHEMA', 'dbo', 'table', 'payment_operational' 
end 
else 
begin 
  EXEC sys.sp_addextendedproperty 'MS_Description', 'Информация о платежах, проведённых в течение 1 месяца с последнего. Необходима для быстрого и частого доступа к последним транзакциям', 'SCHEMA', 'dbo', 'table', 'payment_operational' 
end
GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'table', 'physical_person', NULL, NULL)) 
begin 
  EXEC sys.sp_updateextendedproperty 'MS_Description', 'Подробная информация о конкретном физическом лице, включая адрес проживания, телефонный номер, ФИО, номер паспорта', 'SCHEMA', 'dbo', 'table', 'physical_person' 
end 
else 
begin 
  EXEC sys.sp_addextendedproperty 'MS_Description', 'Подробная информация о конкретном физическом лице, включая адрес проживания, телефонный номер, ФИО, номер паспорта', 'SCHEMA', 'dbo', 'table', 'physical_person' 
end
GO

if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'table', 'site_page', NULL, NULL)) 
begin 
  EXEC sys.sp_updateextendedproperty 'MS_Description', 'Древовидная структура, содержащая в себе страницы сайта банка с их названиями ии содержанием', 'SCHEMA', 'dbo', 'table', 'site_page' 
end 
else 
begin 
  EXEC sys.sp_addextendedproperty 'MS_Description', 'Древовидная структура, содержащая в себе страницы сайта банка с их названиями ии содержанием', 'SCHEMA', 'dbo', 'table', 'site_page' 
end
GO
